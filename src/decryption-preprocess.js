// Generated by CoffeeScript 1.12.7
var Actions,
    DecryptPGPExtension,
    MessageViewExtension,
    PGPKeyStore,
    ref,
    extend = function (child, parent) {
  for (var key in parent) {
    if (hasProp.call(parent, key)) child[key] = parent[key];
  }function ctor() {
    this.constructor = child;
  }ctor.prototype = parent.prototype;child.prototype = new ctor();child.__super__ = parent.prototype;return child;
},
    hasProp = {}.hasOwnProperty;

ref = require('mailspring-exports'), MessageViewExtension = ref.MessageViewExtension, Actions = ref.Actions;

PGPKeyStore = require('./pgp-key-store');

DecryptPGPExtension = function (superClass) {
  extend(DecryptPGPExtension, superClass);

  function DecryptPGPExtension() {
    return DecryptPGPExtension.__super__.constructor.apply(this, arguments);
  }

  DecryptPGPExtension.formatMessageBody = function (arg) {
    var message;
    message = arg.message;
    if (!PGPKeyStore.hasEncryptedComponent(message)) {
      return message;
    }
    if (PGPKeyStore.isDecrypted(message)) {
      message.body = PGPKeyStore.getDecrypted(message);
    } else {
      PGPKeyStore.decrypt(message);
    }
    return message;
  };

  return DecryptPGPExtension;
}(MessageViewExtension);

module.exports = DecryptPGPExtension;
