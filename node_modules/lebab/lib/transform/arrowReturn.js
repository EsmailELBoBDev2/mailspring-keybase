'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (ast) {
  _traverser2.default.replace(ast, {
    enter: function enter(node) {
      if (isShortenableArrowFunction(node)) {
        return shortenReturn(node);
      }
    }
  });
};

var _traverser = require('../traverser');

var _traverser2 = _interopRequireDefault(_traverser);

var _fMatches = require('f-matches');

var _copyComments = require('../utils/copyComments');

var _copyComments2 = _interopRequireDefault(_copyComments);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function shortenReturn(node) {
  node.body = extractArrowBody(node.body);
  return node;
}

var matchesReturnBlock = (0, _fMatches.matches)({
  type: 'BlockStatement',
  body: (0, _fMatches.matchesLength)([(0, _fMatches.extract)('returnStatement', {
    type: 'ReturnStatement',
    argument: (0, _fMatches.extractAny)('returnVal')
  })])
});

function isShortenableArrowFunction(node) {
  return node.type === 'ArrowFunctionExpression' && matchesReturnBlock(node.body);
}

function extractArrowBody(block) {
  var _matchesReturnBlock = matchesReturnBlock(block),
      returnStatement = _matchesReturnBlock.returnStatement,
      returnVal = _matchesReturnBlock.returnVal;
  // preserve return statement comments


  (0, _copyComments2.default)({ from: returnStatement, to: returnVal });
  return returnVal;
}